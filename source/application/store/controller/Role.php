<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2019/7/16
 * Time: 17:58
 */
namespace app\store\controller;

use think\Db;
use think\Request;
use think\Validate;

class Role extends Controller{
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->auth();
    }
    public function index(){

        $list = Db::name('role')->paginate(10,false,['query' => Request::instance()->request()]);
        return $this->fetch('index',compact('list'));
    }

    public function add(){

        $rule = Db::name('auth_rule')->select();

        if(request()->isPost()){

            $res['name'] = input('name');
            $res['rid'] = ltrim(input('rid'),',');

            $rule = [
                'name|角色名' => 'require',
                'rid|权限' => 'require'
            ];
            $validate = new Validate($rule);

            if(!$validate->check($res)){
                return $this->return_msg(400,$validate->getError());
            }


            $data = Db::name('role')->insert($res);

            if($data){
                return $this->return_msg(200,'角色添加成功');
            }else{
                return $this->return_msg(400,'error');
            }
        }

        return $this->fetch('add',compact('rule'));
    }

    public function edit(){
        $id = input('id');
        $edit = Db::name('role')->find($id);
        $rule = Db::name('auth_rule')->select();
        $rid = explode(',',$edit['rid']);

        if(request()->isPost()){

            $res['name'] = input('name');
            $res['rid'] = ltrim(input('rid'),',');
            $res['id'] = input('id');

//            dump($res);exit;
            $rule = [
                'name|角色名' => 'require',
                'rid|权限' => 'require'
            ];
            $validate = new Validate($rule);

            if(!$validate->check($res)){
                return $this->return_msg(400,$validate->getError());
            }


            $data = Db::name('role')->update($res);

            if($data !== false){
                return $this->return_msg(200,'更新成功');
            }else{
                return $this->return_msg(400,'更新失败');
            }

        }
        return $this->fetch('edit',compact('edit','rule','rid'));
    }

    public function del(){
        $id = input('id');

        $data = Db::name('role')->delete($id);

        if($data){
            return $this->index();
        }
    }
}