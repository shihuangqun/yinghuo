<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2019/7/15
 * Time: 11:56
 */
namespace app\store\controller;

use think\Db;
use think\Request;
use think\Loader;
use think\Validate;

class Distributor extends Controller{
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->auth();
    }
    public function index(){

        $list = Db::name('distributor')->paginate(10,false,['query' => Request::instance()->request()]);
        return $this->fetch('index',compact('list'));
    }

    public function add(){
        if(request()->isPost()){

            $res = Request::instance()->param();
            $res['wxapp_id'] = 10001;
            $rule = [
                'name|用户名' => 'require|min:5|max:16|unique:distributor',
                'password|密码' => 'require|min:6|max:16',
                'repassword|确认密码' => 'require|confirm:password'
            ];
            $validate = new Validate($rule);

            if(!$validate->check($res)){
                return $this->return_msg(400,$validate->getError());
            }

            unset($res['repassword']);

            $res['password'] = yoshop_hash($res['password']);
            $res['create_time'] = time();

            $data = Db::name('distributor')->insert($res);

            if($data){
                return $this->return_msg(200,'添加成功');
            }else{
                return $this->return_msg(400,'error');
            }
        }

        return $this->fetch();
    }

    public function edit(){
        $id = input('id');
        $edit = Db::name('distributor')->find($id);
        if(request()->isPost()){

            $res = Request::instance()->param();

            $rule = [
                'name|用户名' => 'require|min:5|max:16|unique:distributor',
                'password|密码' => 'require|min:6|max:16',
                'repassword|确认密码' => 'require|confirm:password'
            ];
            $validate = new Validate($rule);

            if(!$validate->check($res)){
                return $this->return_msg(400,$validate->getError());
            }

            unset($res['repassword']);
            $res['password'] = yoshop_hash($res['password']);

            $data = Db::name('distributor')->update($res);

            if($data !== false){
                return $this->return_msg(200,'更新成功');
            }else{
                return $this->return_msg(400,'更新失败');
            }

        }
        return $this->fetch('edit',compact('edit'));
    }

    public function del(){
        $id = input('id');

        $data = Db::name('distributor')->delete($id);

        if($data){
            return $this->index();
        }
    }

    public function save_status(){

        $id = input('id');

        $info = Db::name('distributor')->find($id);

        if($info['status'] == 0){
            $data = Db::name('distributor')->where('id',$id)->update(['status' => 1]);

            if($data){
                $code = 200;
                $msg = '更新成功';
            }
        }else if($info['status'] == 1){
            $data = Db::name('distributor')->where('id',$id)->update(['status' => 0]);

            if($data){
                $code = 200;
                $msg = '更新成功';
            }

        }

        return $this->return_msg($code,$msg);
    }

    public function getProvince(){

        $pid = input('pid');

        $info = Db::name('region')->where('pid',$pid)->select();

        return json_encode($info);
    }
}